## TS setup for TYPO3 image rendering

#******************************************************
# Including library for processing of magic images and file abstraction attributes on img tag
#******************************************************

lib.parseFunc_RTE {
    tags.img = TEXT
    tags.img {
        current = 1
        preUserFunc = Netresearch\RteCKEditorImage\Controller\ImageRenderingController->renderImageAttributes
    }
    tags.a = TEXT
    tags.a {
        current = 1
        preUserFunc = Netresearch\RteCKEditorImage\Controller\ImageLinkRenderingController->renderImages
    }
    nonTypoTagStdWrap.HTMLparser.tags.img.fixAttrib {
        allparams.unset = 1
        data-htmlarea-file-uid.unset = 1
        data-htmlarea-file-table.unset = 1
        data-htmlarea-zoom.unset = 1
        data-htmlarea-clickenlarge.unset = 1
        data-title-override.unset = 1
        data-alt-override.unset = 1
    }
}

lib.parseFunc_RTE.nonTypoTagStdWrap.encapsLines.encapsTagList := addToList(img)

#******************************************************
# Native browser lazy loading support
# Bridges the standard TYPO3 constant styles.content.image.lazyLoading
# to the path expected by the image rendering controllers.
# This makes the extension work independently of EXT:fluid_styled_content.
# Set via constants: styles.content.image.lazyLoading = lazy|eager|auto
#******************************************************
lib.contentElement.settings.media.lazyLoading = {$styles.content.image.lazyLoading}
